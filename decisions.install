<?php

/**
 * @file
 *
 * .install file for decisions module
 *
 */

/**
 * Implementation of hook_install().
 */
function decisions_install() {
  switch ($GLOBALS['db_type']) {
  case 'mysql':
  case 'mysqli':
    db_query("CREATE TABLE {decisions} (
          `nid` int(10) NOT NULL,
          `mode` varchar(32) NOT NULL,
          `quorum_abs` int(10) unsigned NOT NULL default '0',
          `quorum_percent` float unsigned NOT NULL default '0',
          `uselist` tinyint default '0',
          `active` tinyint default '1',
          `runtime` int NOT NULL default '0',
          `maxchoices` int unsigned NOT NULL default '0',
          `algorithm` VARCHAR(100),
          `showvotes` tinyint,
          `startdate` int unsigned,
          PRIMARY KEY  (`nid`)
      ) ENGINE=MyISAM /*!40100 DEFAULT CHARACTER SET utf8 */");

    db_query("CREATE TABLE {decisions_electoral_list} (
          `nid` int(10) NOT NULL,
          `uid` int(10) NOT NULL,
          PRIMARY KEY  (`nid`,`uid`)
      ) ENGINE=MyISAM /*!40100 DEFAULT CHARACTER SET utf8 */");

    db_query("CREATE TABLE {decisions_choices} (
          `nid` int(10) NOT NULL,
          `label` text NOT NULL,
          `vote_offset` int(2) default NULL,
          PRIMARY KEY  (`nid`, `vote_offset`),
          KEY `vote_offset` (`vote_offset`)
        ) ENGINE=MyISAM /*!40100 DEFAULT CHARACTER SET utf8 */");

    break;
  }
}

function decisions_update_1() {
  switch ($GLOBALS['db_type']) {         
  case 'mysql':          
  case 'mysqli':
    $items[] = update_sql("ALTER TABLE {decisions} ADD COLUMN showvotes TINYINT DEFAULT '1'");
    break;
  }
  return $items;
}

function decisions_update_2() {
  switch ($GLOBALS['db_type']) {
  case 'mysql':
  case 'mysqli':
    db_query("ALTER TABLE {decisions} ADD COLUMN active TINYINT DEFAULT '1'");
    db_query("ALTER TABLE {decisions} ADD COLUMN runtime INT UNSIGNED DEFAULT '0'");
    db_query("ALTER TABLE {decisions} ADD COLUMN maxchoices INT UNSIGNED");
    db_query("ALTER TABLE {decisions} ADD COLUMN algorithm VARCHAR(255)");
    db_query('UPDATE {decisions} SET maxchoices=1 WHERE mode="poll" AND maxchoices is null');
    db_query("UPDATE {decisions} SET algorithm='runoff' WHERE mode='runoff'");
    db_query("UPDATE {decisions} SET mode='ranking' WHERE mode='runoff'");
    db_query("ALTER TABLE {decisions_options} CHANGE COLUMN opttext chtext text");
    db_query("ALTER TABLE {decisions_options} CHANGE COLUMN optorder chorder int(2)");
    db_query("RENAME TABLE {decisions_options} TO {decisions_choices}");
    break;
  }
}

function decisions_update_3() {
  switch ($GLOBALS['db_type']) {
  case 'mysql':
  case 'mysqli':
    $items[] = update_sql("ALTER TABLE {decisions} ADD COLUMN startdate INT unsigned");
    $items[] = update_sql("ALTER TABLE {decisions_choices} CHANGE COLUMN chtext `label` text NOT NULL");
    $items[] = update_sql("ALTER TABLE {decisions_choices} CHANGE COLUMN chorder `vote_offset` int(2) default NULL");
    break;
  }
  return $items;
}

function decisions_update_4() {
  switch ($GLOBALS['db_type']) {
  case 'mysql':
  case 'mysqli':
    $items[] = update_sql("ALTER TABLE {decisions} ADD COLUMN `uselist` tinyint default '0'");
    break;
  }
  return $items;
}

function decisions_update_5() {
  switch ($GLOBALS['db_type']) {
  case 'mysql':
  case 'mysqli':
    $items[] = update_sql("ALTER TABLE {decisions} MODIFY `quorum` int(10) NOT NULL AFTER mode");
    $items[] = update_sql("ALTER TABLE {decisions} CHANGE COLUMN quorum `quorum_abs` int(10) unsigned NOT NULL default '0'");
    $items[] = update_sql("ALTER TABLE {decisions} ADD COLUMN quorum_percent float unsigned NOT NULL default '0' AFTER quorum_abs");
    break;
  }
  return $items;
}

/**
 * Implementation of hook_uninstall().
 */
function decisions_uninstall() {
  // remove votes from all decisions
  db_query("DELETE FROM {votingapi_vote} WHERE content_type='decisions'");
  $result = db_query('SELECT nid FROM {decisions}');
  while ($obj = db_fetch_object($result)) {
    node_delete($obj->nid);
  }
  db_query('DROP TABLE {decisions}');
  db_query('DROP TABLE {decisions_electoral_list}');
  db_query('DROP TABLE {decisions_choices}');
  variable_del('decisions_default_mode');
  variable_del('decisions_default_electoral_list');
}
